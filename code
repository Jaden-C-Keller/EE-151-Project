int motor[4];//array for PWM ports controlling motors
int encoder[4] = {24, 25};
int counter = 0;
int lastValue;
int newValue;
boolean done = true;

void setup() {
  for(int i = 1; i<=4; i++){
    Serial.begin(9600);
    motor[i] = i+3; //sets motor control values to port numbers
    pinMode(encoder[i], INPUT);//sets encoder ports to input
    pinMode(motor[i], OUTPUT);//sets motor ports to output
    lastValue = digitalRead(encoder[1]);
  }
}

void loop() {
  if(done){
    linear(0.5);
    Encoder(10000);
    linear(0.0);
    done = false;
  }
}


void linear(float speed){//linear movement
  leftMotor(speed);//positive value for forward
  rightMotor(speed);//negative for backward
}


void turn(float speed){//turn about center
    rightMotor(-speed);//positive for cw
    leftMotor(speed);//negative for cc
}

  
void rightMotor(float speed){//control right motor
  if(speed > 0){             //positive value for "forward"
    analogWrite(motor[1], percent(speed));
    analogWrite(motor[2], 0);
  }
  else if(speed < 0){        //negative value for "backward"
    analogWrite(motor[1], 0);
    analogWrite(motor[2], percent(speed));  
  }
  else{                      //0 value for stop
    analogWrite(motor[1], 0);
    analogWrite(motor[2], 0);
  }
}


void leftMotor(float speed){//control left motor
  if(speed > 0){            //positive value for "forward"
    analogWrite(motor[3], percent(speed));
    analogWrite(motor[4], 0);
  }
  else if(speed < 0){        //negative value for "backward"
    analogWrite(motor[3], 0);
    analogWrite(motor[4], percent(speed));  
  }
  else{                     //0 value for stop
    analogWrite(motor[3], 0);
    analogWrite(motor[4], 0);
  }  
}

void Encoder(int distance){
 while(counter<distance){
   newValue = digitalRead(encoder[1]);
     if(newValue != lastValue){
       /*if(digitalRead(encoder[2]) != newValue){
         counter++;
       }
       else{*/
         counter++;
       //}
     }
   lastValue = newValue;
 }
 counter = 0;
}


int percent(float speed){//convert percentage to analog units
  return speed * 255.0;
}


void timer(float seconds){//convert normal dealy to seconds
  delay(seconds*1000);  
}
